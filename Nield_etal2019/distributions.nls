;; Code to compute density /distribution functions for various distributions

;; Cauchy  density (x = point of interest, loc = location, scl = scale)
to-report d-cauchy [x loc scl]
  report (1 / pi) * ( scl / ((x - loc) ^ 2 + scl ^ 2 ) )
end    

;; Deviate from Cauchy distribution with location (loc) and scale (scl)
;; From: Devroye, L. 1986. Non-Uniform Random Variate Generation, Springer, NY

to-report r-cauchy [loc scl]
  let X (pi * (random-float 1)) ;; Netlogo tan takes degrees not radians
  report loc + scl * tan(X * (180 / pi))

end

;; generate a binomial deviate (N, p)
to-report random-binomial [n p]
  report length filter [a -> a] n-values n [random-float 1 < p]
end  

;; generate a lognormal deviate with specified mean and sd
;; the code here is rescaling as the arguments are arithmetic means
;; SEE: https://msalganik.wordpress.com/2017/01/21/making-sense-of-the-rlnorm-function-in-r/
;; https://en.wikipedia.org/wiki/Log-normal_distribution#Arithmetic_moments
to-report random-lognormal [m s]
  let x ln (1 + (s / m) ^ 2)
  let mn ln m - x / 2
  let sigma sqrt x
  report exp (mn + random-normal 0 1 * sigma)
end

;; cdf of Gaussian distribution (canonical)
to-report cdf-normal [x]
  let s x
  let v x
  let i 1

  while [i < 100]
  [
    set v (v * x * x / (2 * i + 1))
    set s  s + v
    set i i + 1
  ]

  report 0.5 + (s / sqrt(2 * pi)) * exp(-( x * x) / 2)
end

;; cdf of log-Normal distribution

to-report cdf-lnormal[x mn sd]
   let x-scale (ln(x) - mn) / sd
   report cdf-normal x-scale
end

;; Gaussian density return location + scale * tan(M_PI * unif_rand(rng)); (x = point of interest, mu = mean, sigma = SD)
to-report d-gaussian [x mn sigma]
  report (1 / (sqrt (2 * pi)  * sigma )) * exp (-((x - mn) ^ 2) / (2 * sigma ^ 2) )
end

;; Deviate from Pareto distribution (code from VGAM)
;; See Forbes et al. 2011, Chapter 34
;; Mean ca/(c-1) for c > 1 and variance ca^2/[(c − 1)^2(c − 2)] for c > 2

to-report random-pareto [xm alpha] 

  if xm <= 0 or alpha <= 0 [error "Invalid pareto value" ]
	let ans xm / (random-float 1) ^ (1 / alpha)

  report ans
end