"assess-top-sections"),
variables = list("proportion-of-habitat" = list(min = 10, max = 90, step = 20, qfun = "qunif"),
"matrix-permeability" = list(min = 0.1, max = 0.9, step = 0.1, qfun = "runif"),
"perceptual-range" = list(min = 5, max = 20, step = 5, qfun = "runif"),
"vision-angle" = list(min = 90, max = 180, qfun = "qunif")),
constants = list("number-of-individuals" = 10,
"steps" = 10,
"scenario" = 8,
"save-data?" = "true",
"output-file" = "sobol_random"))
print(nl.sobol.random)
report_model_parameters(nl.sobol.random)
#### STEP 2 experiment----
nl.sobol.random@experiment <- experiment(expname = "sobol.random-raw",
outpath = "/Users/bibianaterra/Library/CloudStorage/OneDrive-Personal/Doutorado/Predicao_ferrovias/ibm-code/results",
repetition = 1,
tickmetrics = "false",
idsetup = "setup",
idgo = "go",
stopcond = "ticks = steps",
metrics = c("(count patches)",
"count patches with [habitat = 1]",
"count patches with [habitat = 2]",
"mean [hab_neighbors] of patches with [habitat = 0]",
"sum [visits] of patches with [habitat = 0]",
"assess-top-sections"),
variables = list("proportion-of-habitat" = list(min = 10, max = 90, step = 20, qfun = "qunif"),
"matrix-permeability" = list(min = 0.1, max = 0.9, step = 0.1, qfun = "runif"),
"perceptual-range" = list(min = 5, max = 20, step = 5, qfun = "runif"),
"vision-angle" = list(min = 90, max = 180, qfun = "qunif")),
constants = list("number-of-individuals" = 10,
"steps" = 10,
"scenario" = 8,
"save-data?" = "true",
"output-file" = "sobol_random"))
print(nl.sobol.random)
eval_variables_constants(nl.sobol.random)
#### STEP 3 simulation design----
nl.sobol.random@simdesign <- simdesign_sobol(nl = nl.sobol.random,
samples = 10,
sobolorder = 4,
sobolnboot = 1,
sobolconf = 0.95,
nseeds = 1,
precision = 4)
nl.sobol.random@simdesign@siminput
teste <- run_nl_one(nl.sobol.random, getsim(nl.sobol.random,"simseeds")[1], 120)
#### STEP 2 experiment----
nl.sobol.random@experiment <- experiment(expname = "sobol.random-raw",
outpath = "/Users/bibianaterra/Library/CloudStorage/OneDrive-Personal/Doutorado/Predicao_ferrovias/ibm-code/results",
repetition = 1,
tickmetrics = "false",
idsetup = "setup",
idgo = "go",
stopcond = "ticks = steps",
metrics = c("(count patches)",
"count patches with [habitat = 1]",
"count patches with [habitat = 2]",
"mean [hab_neighbors] of patches with [habitat = 0]",
"sum [visits] of patches with [habitat = 0]",
"assess-top-sections"),
variables = list("proportion-of-habitat" = list(min = 10, max = 90, step = 20, qfun = "qunif"),
"matrix-permeability" = list(min = 0.1, max = 0.9, step = 0.1, qfun = "runif"),
"perceptual-range" = list(min = 5, max = 20, step = 5, qfun = "runif"),
"vision-angle" = list(min = 90, max = 180, qfun = "qunif")),
constants = list("number-of-individuals" = 10,
"steps" = 10,
"scenario" = 8,
"save-data?" = "true",
"output-file" = 8888))
#### STEP 3 simulation design----
nl.sobol.random@simdesign <- simdesign_sobol(nl = nl.sobol.random,
samples = 10,
sobolorder = 4,
sobolnboot = 1,
sobolconf = 0.95,
nseeds = 1,
precision = 4)
nl.sobol.random@simdesign@siminput
teste <- run_nl_one(nl.sobol.random, getsim(nl.sobol.random,"simseeds")[1], 120)
#### STEP 2 experiment----
nl.sobol.random@experiment <- experiment(expname = "sobol.random-raw",
outpath = "/Users/bibianaterra/Library/CloudStorage/OneDrive-Personal/Doutorado/Predicao_ferrovias/ibm-code/results",
repetition = 1,
tickmetrics = "false",
idsetup = "setup",
idgo = "go",
stopcond = "ticks = steps",
metrics = c("(count patches)",
"count patches with [habitat = 1]",
"count patches with [habitat = 2]",
"mean [hab_neighbors] of patches with [habitat = 0]",
"sum [visits] of patches with [habitat = 0]",
"assess-top-sections"),
variables = list("proportion-of-habitat" = list(min = 10, max = 90, step = 20, qfun = "qunif"),
"matrix-permeability" = list(min = 0.1, max = 0.9, step = 0.1, qfun = "runif"),
"perceptual-range" = list(min = 5, max = 20, step = 5, qfun = "runif"),
"vision-angle" = list(min = 90, max = 180, qfun = "qunif")),
constants = list("number-of-individuals" = 10,
"steps" = 10,
"scenario" = 8,
"save-data?" = "true"))
eval_variables_constants(nl.sobol.random)
#### STEP 3 simulation design----
nl.sobol.random@simdesign <- simdesign_sobol(nl = nl.sobol.random,
samples = 10,
sobolorder = 4,
sobolnboot = 1,
sobolconf = 0.95,
nseeds = 1,
precision = 4)
nl.sobol.random@simdesign@siminput
teste <- run_nl_one(nl.sobol.random, getsim(nl.sobol.random,"simseeds")[1], 120)
View(teste)
eval_variables_constants(nl.sobol.random)
#### STEP 2 experiment----
nl.sobol.random@experiment <- experiment(expname = "sobol.random-raw",
outpath = "/Users/bibianaterra/Library/CloudStorage/OneDrive-Personal/Doutorado/Predicao_ferrovias/ibm-code/results",
repetition = 1,
tickmetrics = "false",
idsetup = "setup",
idgo = "go",
stopcond = "ticks = steps",
metrics = c("(count patches)",
"count patches with [habitat = 1]",
"count patches with [habitat = 2]",
"mean [hab_neighbors] of patches with [habitat = 0]",
"sum [visits] of patches with [habitat = 0]",
"assess-top-sections"),
variables = list("proportion-of-habitat" = list(min = 10, max = 90, step = 20, qfun = "qunif"),
"matrix-permeability" = list(min = 0.1, max = 0.9, step = 0.1, qfun = "runif"),
"perceptual-range" = list(min = 5, max = 20, step = 5, qfun = "runif"),
"vision-angle" = list(min = 90, max = 180, qfun = "qunif")),
constants = list("number-of-individuals" = 10,
"steps" = 10,
"scenario" = 8,
"save-data?" = "true",
"outputfile" = "teste2"))
#### STEP 3 simulation design----
nl.sobol.random@simdesign <- simdesign_sobol(nl = nl.sobol.random,
samples = 10,
sobolorder = 4,
sobolnboot = 1,
sobolconf = 0.95,
nseeds = 1,
precision = 4)
nl.sobol.random@simdesign@siminput
teste <- run_nl_one(nl.sobol.random, getsim(nl.sobol.random,"simseeds")[1], 120)
#### STEP 2 experiment----
nl.sobol.random@experiment <- experiment(expname = "sobol.random-raw",
outpath = "/Users/bibianaterra/Library/CloudStorage/OneDrive-Personal/Doutorado/Predicao_ferrovias/ibm-code/results",
repetition = 1,
tickmetrics = "false",
idsetup = "setup",
idgo = "go",
stopcond = "ticks = steps",
metrics = c("(count patches)",
"count patches with [habitat = 1]",
"count patches with [habitat = 2]",
"mean [hab_neighbors] of patches with [habitat = 0]",
"sum [visits] of patches with [habitat = 0]",
"assess-top-sections"),
variables = list("proportion-of-habitat" = list(min = 10, max = 90, step = 20, qfun = "qunif"),
"matrix-permeability" = list(min = 0.1, max = 0.9, step = 0.1, qfun = "runif"),
"perceptual-range" = list(min = 5, max = 20, step = 5, qfun = "runif"),
"vision-angle" = list(min = 90, max = 180, qfun = "qunif")),
constants = list("number-of-individuals" = 10,
"steps" = 10,
"scenario" = 8,
"save-data?" = "true",
"outputfile" = "teste2"))
#### STEP 3 simulation design----
nl.sobol.random@simdesign <- simdesign_sobol(nl = nl.sobol.random,
samples = 10,
sobolorder = 4,
sobolnboot = 1,
sobolconf = 0.95,
nseeds = 1,
precision = 4)
nl.sobol.random <- nl(nlversion = "6.0.4",
nlpath = netlogopath.mac,
modelpath = modelpath.mac,
jvmmem = 1024)
#### STEP 2 experiment----
nl.sobol.random@experiment <- experiment(expname = "sobol.random-raw",
outpath = "/Users/bibianaterra/Library/CloudStorage/OneDrive-Personal/Doutorado/Predicao_ferrovias/ibm-code/results",
repetition = 1,
tickmetrics = "false",
idsetup = "setup",
idgo = "go",
stopcond = "ticks = steps",
metrics = c("(count patches)",
"count patches with [habitat = 1]",
"count patches with [habitat = 2]",
"mean [hab_neighbors] of patches with [habitat = 0]",
"sum [visits] of patches with [habitat = 0]",
"assess-top-sections"),
variables = list("proportion-of-habitat" = list(min = 10, max = 90, step = 20, qfun = "qunif"),
"matrix-permeability" = list(min = 0.1, max = 0.9, step = 0.1, qfun = "runif"),
"perceptual-range" = list(min = 5, max = 20, step = 5, qfun = "runif"),
"vision-angle" = list(min = 90, max = 180, qfun = "qunif")),
constants = list("number-of-individuals" = 10,
"steps" = 10,
"scenario" = 8,
"save-data?" = "true",
"outputfile" = "teste2"))
#### STEP 3 simulation design----
nl.sobol.random@simdesign <- simdesign_sobol(nl = nl.sobol.random,
samples = 10,
sobolorder = 4,
sobolnboot = 1,
sobolconf = 0.95,
nseeds = 1,
precision = 4)
#nl.sobol.random@simdesign@siminput
teste <- run_nl_one(nl.sobol.random, getsim(nl.sobol.random,"simseeds")[1], 120)
#### STEP 2 experiment----
nl.sobol.random@experiment <- experiment(expname = "sobol.random-raw",
outpath = "/Users/bibianaterra/Library/CloudStorage/OneDrive-Personal/Doutorado/Predicao_ferrovias/ibm-code/results",
repetition = 1,
tickmetrics = "false",
idsetup = "setup",
idgo = "go",
stopcond = "ticks = steps",
metrics = c("(count patches)",
"count patches with [habitat = 1]",
"count patches with [habitat = 2]",
"mean [hab_neighbors] of patches with [habitat = 0]",
"sum [visits] of patches with [habitat = 0]",
"assess-top-sections"),
variables = list("proportion-of-habitat" = list(min = 10, max = 90, step = 20, qfun = "qunif"),
"matrix-permeability" = list(min = 0.1, max = 0.9, step = 0.1, qfun = "runif"),
"perceptual-range" = list(min = 5, max = 20, step = 5, qfun = "runif"),
"vision-angle" = list(min = 90, max = 180, qfun = "qunif")),
constants = list("number-of-individuals" = 10,
"steps" = 10,
"scenario" = 8,
"save-data?" = "true"))
eval_variables_constants(nl.sobol.random)
#### STEP 3 simulation design----
nl.sobol.random@simdesign <- simdesign_sobol(nl = nl.sobol.random,
samples = 10,
sobolorder = 4,
sobolnboot = 1,
sobolconf = 0.95,
nseeds = 1,
precision = 4)
#nl.sobol.random@simdesign@siminput
teste <- run_nl_one(nl.sobol.random, getsim(nl.sobol.random,"simseeds")[1], 120)
#### STEP 2 experiment----
nl.sobol.random@experiment <- experiment(expname = "sobol.random-raw",
outpath = "/Users/bibianaterra/Library/CloudStorage/OneDrive-Personal/Doutorado/Predicao_ferrovias/ibm-code/results",
repetition = 1,
tickmetrics = "false",
idsetup = "setup",
idgo = "go",
runtime = 10,
metrics = c("(count patches)",
"count patches with [habitat = 1]",
"count patches with [habitat = 2]",
"mean [hab_neighbors] of patches with [habitat = 0]",
"sum [visits] of patches with [habitat = 0]",
"assess-top-sections"),
variables = list("proportion-of-habitat" = list(min = 10, max = 90, step = 20, qfun = "qunif"),
"matrix-permeability" = list(min = 0.1, max = 0.9, step = 0.1, qfun = "runif"),
"perceptual-range" = list(min = 5, max = 20, step = 5, qfun = "runif"),
"vision-angle" = list(min = 90, max = 180, qfun = "qunif")),
constants = list("number-of-individuals" = 10,
"steps" = 10,
"scenario" = 8,
"save-data?" = "true"))
eval_variables_constants(nl.sobol.random)
#### STEP 3 simulation design----
nl.sobol.random@simdesign <- simdesign_sobol(nl = nl.sobol.random,
samples = 10,
sobolorder = 4,
sobolnboot = 1,
sobolconf = 0.95,
nseeds = 1,
precision = 4)
#nl.sobol.random@simdesign@siminput
teste <- run_nl_one(nl.sobol.random, getsim(nl.sobol.random,"simseeds")[1], 120)
nl.sobol.random
View(teste)
#nl.sobol.random@simdesign@siminput
teste <- run_nl_one(nl.sobol.random, getsim(nl.sobol.random,"simseeds")[1], 150)
View(teste)
View(teste)
#### STEP 2 experiment----
nl.sobol.random@experiment <- experiment(expname = "sobol.random-raw",
outpath = "/Users/bibianaterra/Library/CloudStorage/OneDrive-Personal/Doutorado/Predicao_ferrovias/ibm-code/results",
repetition = 1,
tickmetrics = "false",
idsetup = "setup",
idgo = "go",
runtime = 10,
metrics = c("(count patches)",
"count patches with [habitat = 1]",
"count patches with [habitat = 2]",
"mean [hab_neighbors] of patches with [habitat = 0]",
"sum [visits] of patches with [habitat = 0]",
"assess-top-sections"),
variables = list("proportion-of-habitat" = list(min = 10, max = 90, step = 20, qfun = "qunif"),
"matrix-permeability" = list(min = 0.1, max = 0.9, step = 0.1, qfun = "runif"),
"perceptual-range" = list(min = 5, max = 20, step = 5, qfun = "runif"),
"vision-angle" = list(min = 90, max = 180, qfun = "qunif")),
constants = list("number-of-individuals" = 2,
"steps" = 100,
"scenario" = 8,
"save-data?" = "true"))
eval_variables_constants(nl.sobol.random)
#### STEP 3 simulation design----
nl.sobol.random@simdesign <- simdesign_sobol(nl = nl.sobol.random,
samples = 10,
sobolorder = 4,
sobolnboot = 1,
sobolconf = 0.95,
nseeds = 1,
precision = 4)
#nl.sobol.random@simdesign@siminput
teste <- run_nl_one(nl.sobol.random, getsim(nl.sobol.random,"simseeds")[1], 150)
View(teste)
#### STEP 2 experiment----
nl.sobol.random@experiment <- experiment(expname = "sobol.random-raw",
outpath = "/Users/bibianaterra/Library/CloudStorage/OneDrive-Personal/Doutorado/Predicao_ferrovias/ibm-code/results",
repetition = 1,
tickmetrics = "false",
idsetup = "setup",
idgo = "go",
runtime = 100,
metrics = c("(count patches)",
"count patches with [habitat = 1]",
"count patches with [habitat = 2]",
"mean [hab_neighbors] of patches with [habitat = 0]",
"sum [visits] of patches with [habitat = 0]",
"assess-top-sections"),
variables = list("proportion-of-habitat" = list(min = 10, max = 90, step = 20, qfun = "qunif"),
"matrix-permeability" = list(min = 0.1, max = 0.9, step = 0.1, qfun = "runif"),
"perceptual-range" = list(min = 5, max = 20, step = 5, qfun = "runif"),
"vision-angle" = list(min = 90, max = 180, qfun = "qunif")),
constants = list("number-of-individuals" = 2,
"steps" = 100,
"scenario" = 8,
"save-data?" = "true"))
#### STEP 3 simulation design----
nl.sobol.random@simdesign <- simdesign_sobol(nl = nl.sobol.random,
samples = 10,
sobolorder = 4,
sobolnboot = 1,
sobolconf = 0.95,
nseeds = 1,
precision = 4)
#nl.sobol.random@simdesign@siminput
teste <- run_nl_one(nl.sobol.random, getsim(nl.sobol.random,"simseeds")[1], 150)
#### STEP 2 experiment----
nl.sobol.random@experiment <- experiment(expname = "sobol.random-raw",
outpath = "/Users/bibianaterra/Library/CloudStorage/OneDrive-Personal/Doutorado/Predicao_ferrovias/ibm-code/results",
repetition = 1,
tickmetrics = "false",
idsetup = "setup",
idgo = "go",
runtime = 100,
metrics = c("(count patches)",
"count patches with [habitat = 1]",
"count patches with [habitat = 2]",
"mean [hab_neighbors] of patches with [habitat = 0]",
"sum [visits] of patches with [habitat = 0]",
"assess-top-sections"),
variables = list("proportion-of-habitat" = list(min = 10, max = 90, step = 20, qfun = "qunif"),
"matrix-permeability" = list(min = 0.1, max = 0.9, step = 0.1, qfun = "runif"),
"perceptual-range" = list(min = 5, max = 20, step = 5, qfun = "runif"),
"vision-angle" = list(min = 90, max = 180, qfun = "qunif")),
constants = list("number-of-individuals" = 2,
"steps" = 100,
"scenario" = 8,
"save-data?" = "true",
"outputfile" = "ultimogas"))
eval_variables_constants(nl.sobol.random)
#### STEP 3 simulation design----
nl.sobol.random@simdesign <- simdesign_sobol(nl = nl.sobol.random,
samples = 10,
sobolorder = 4,
sobolnboot = 1,
sobolconf = 0.95,
nseeds = 1,
precision = 4)
#nl.sobol.random@simdesign@siminput
teste <- run_nl_one(nl.sobol.random, getsim(nl.sobol.random,"simseeds")[1], 147)
#### STEP 2 experiment----
nl.sobol.random@experiment <- experiment(expname = "sobol.random-raw",
outpath = "/Users/bibianaterra/Library/CloudStorage/OneDrive-Personal/Doutorado/Predicao_ferrovias/ibm-code/results",
repetition = 1,
tickmetrics = "false",
idsetup = "setup",
idgo = "go",
runtime = 100,
metrics = c("(count patches)",
"count patches with [habitat = 1]",
"count patches with [habitat = 2]",
"mean [hab_neighbors] of patches with [habitat = 0]",
"sum [visits] of patches with [habitat = 0]",
"assess-top-sections"),
variables = list("proportion-of-habitat" = list(min = 10, max = 90, step = 20, qfun = "qunif"),
"matrix-permeability" = list(min = 0.1, max = 0.9, step = 0.1, qfun = "runif"),
"perceptual-range" = list(min = 5, max = 20, step = 5, qfun = "runif"),
"vision-angle" = list(min = 90, max = 180, qfun = "qunif")),
constants = list("number-of-individuals" = 2,
"steps" = 100,
"scenario" = 8,
"save-data?" = "true"))
eval_variables_constants(nl.sobol.random)
#### STEP 3 simulation design----
nl.sobol.random@simdesign <- simdesign_sobol(nl = nl.sobol.random,
samples = 10,
sobolorder = 4,
sobolnboot = 1,
sobolconf = 0.95,
nseeds = 1,
precision = 4)
#nl.sobol.random@simdesign@siminput
teste <- run_nl_one(nl.sobol.random, getsim(nl.sobol.random,"simseeds")[1], 147)
nl.sobol.random@simdesign@siminput
#nl.sobol.random@simdesign@siminput
teste <- run_nl_one(nl.sobol.random, getsim(nl.sobol.random,"simseeds")[1], 2)
#### STEP 2 experiment----
nl.sobol.random@experiment <- experiment(expname = "sobol.random-raw",
outpath = "/Users/bibianaterra/Library/CloudStorage/OneDrive-Personal/Doutorado/Predicao_ferrovias/ibm-code/results",
repetition = 1,
tickmetrics = "false",
idsetup = "setup",
idgo = "go",
runtime = 700,
metrics = c("(count patches)",
"count patches with [habitat = 1]",
"count patches with [habitat = 2]",
"mean [hab_neighbors] of patches with [habitat = 0]",
"sum [visits] of patches with [habitat = 0]",
"assess-top-sections"),
variables = list("proportion-of-habitat" = list(min = 10, max = 90, step = 20, qfun = "qunif"),
"matrix-permeability" = list(min = 0.1, max = 0.9, step = 0.1, qfun = "runif"),
"perceptual-range" = list(min = 5, max = 20, step = 5, qfun = "runif"),
"vision-angle" = list(min = 90, max = 180, qfun = "qunif")),
constants = list("number-of-individuals" = 2,
"steps" = 700,
"scenario" = 8,
"save-data?" = "true"))
#### STEP 3 simulation design----
nl.sobol.random@simdesign <- simdesign_sobol(nl = nl.sobol.random,
samples = 10,
sobolorder = 4,
sobolnboot = 1,
sobolconf = 0.95,
nseeds = 1,
precision = 4)
#nl.sobol.random@simdesign@siminput
teste <- run_nl_one(nl.sobol.random, getsim(nl.sobol.random,"simseeds")[1], 2)
View(teste)
#### STEP 2 experiment----
nl.sobol.random@experiment <- experiment(expname = "sobol.random-raw",
outpath = "/Users/bibianaterra/Library/CloudStorage/OneDrive-Personal/Doutorado/Predicao_ferrovias/ibm-code/results",
repetition = 1,
tickmetrics = "false",
idsetup = "setup",
idgo = "go",
runtime = 700,
metrics = c("(count patches)",
"count patches with [habitat = 1]",
"count patches with [habitat = 2]",
"mean [hab_neighbors] of patches with [habitat = 0]",
"sum [visits] of patches with [habitat = 0]",
"assess-top-sections"),
variables = list("proportion-of-habitat" = list(min = 10, max = 90, step = 20, qfun = "qunif"),
"matrix-permeability" = list(min = 0.1, max = 0.9, step = 0.1, qfun = "runif"),
"perceptual-range" = list(min = 5, max = 20, step = 5, qfun = "runif"),
"vision-angle" = list(min = 90, max = 180, qfun = "qunif")),
constants = list("number-of-individuals" = 100,
"steps" = 700,
"scenario" = 8,
"save-data?" = "true"))
#### STEP 2 experiment----
nl.sobol.random@experiment <- experiment(expname = "sobol.random-raw",
outpath = "/Users/bibianaterra/Library/CloudStorage/OneDrive-Personal/Doutorado/Predicao_ferrovias/ibm-code/results",
repetition = 1,
tickmetrics = "false",
idsetup = "setup",
idgo = "go",
runtime = 700,
metrics = c("(count patches)",
"count patches with [habitat = 1]",
"count patches with [habitat = 2]",
"mean [hab_neighbors] of patches with [habitat = 0]",
"sum [visits] of patches with [habitat = 0]",
"assess-top-sections"),
variables = list("proportion-of-habitat" = list(min = 10, max = 90, step = 20, qfun = "qunif"),
"matrix-permeability" = list(min = 0.1, max = 0.9, step = 0.1, qfun = "runif"),
"perceptual-range" = list(min = 5, max = 20, step = 5, qfun = "runif"),
"vision-angle" = list(min = 90, max = 180, qfun = "qunif")),
constants = list("number-of-individuals" = 50,
"steps" = 700,
"scenario" = 8,
"save-data?" = "true"))
eval_variables_constants(nl.sobol.random)
#### STEP 3 simulation design----
nl.sobol.random@simdesign <- simdesign_sobol(nl = nl.sobol.random,
samples = 10,
sobolorder = 4,
sobolnboot = 1,
sobolconf = 0.95,
nseeds = 1,
precision = 4)
#nl.sobol.random@simdesign@siminput
teste <- run_nl_one(nl.sobol.random, getsim(nl.sobol.random,"simseeds")[1], 2)
